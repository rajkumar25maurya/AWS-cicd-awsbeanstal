name: CI-CD-Pipeline-to-AWS-ElasticBeanstalk
env: 
  EB_PACKAGE_S3_BUCKET_NAME   : "zzzflask-app"
  EB_APPLICATION_NAME         :  "MyFlask"
  EB_ENVIRONMENT_NAME         :  "Myflask-env"
  DEPLOY_PACKAGE_NAME         :  "flask-app-${{ github.sha }}.zip"
  AWS_REGIONS_NAME            : "us-east-1"
  

on:
   push:
    branches:
      - main
  
jobs:
  my_ci_pipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: git clone our repository
        uses: actions/checkout@v1
      
      - name: create Zip deployment package
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
        
      - name: Configure AWS credential.
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id      : ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.AWS_SCRET_ACCESS_KEY }}
          aws-region            : ${{ env.AWS_REGIONS_NAME }} 
          
      - name: Copy our Deployment package to S3 Bucket.
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME}}/
        
      - name: Print nice message on completion of CI Pipeline.
        run: echo "CI Pipeline part finished successfully "


  my_cd_pipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: Configure my aws
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id      : ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key : ${{ secrets.AWS_SCRET_ACCESS_KEY }}
          aws-region            : ${{ env.AWS_REGIONS_NAME }}
      
      - name:
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name ${{ env.EB_APPLICATION_NAME  }} \ 
          --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
          --label-parameter-version "Ver-${{ github.sha }}" \
          --description "CommitSHA-${{ github.sha }}"
      
      - name: Deploy our new Applicaion version.
        run: aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --label-parameter-version "Ver-${{ github.sha }}"
      
     
      - name: Print nice message on completion of CI Pipeline.
        run: echo "CD pipeline part finished successfully"
        
        
        
        
        
        
        
        
        
        






